<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>uhey</title>
  <subtitle>uhey&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-04T10:27:24.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>uhey</name>
    <email>uheyhome@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深度了解bootstrap源码之sass篇（二）</title>
    <link href="http://yoursite.com/2016/08/04/%E6%B7%B1%E5%BA%A6%E4%BA%86%E8%A7%A3bootstrap%E6%BA%90%E7%A0%81%E4%B9%8Bsass%E7%AF%87%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2016/08/04/深度了解bootstrap源码之sass篇（二）/</id>
    <published>2016-08-04T10:21:53.000Z</published>
    <updated>2016-08-04T10:27:24.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  这一章主要学习_variables.scss。目的是学习优秀框架的变量声明方式及结构。所有变量声明的方式决定整体架构的风格。直接决定了UI组件的编写规划，贯穿整体，非常重要。最先了解变量有助于后面UI组件的研究。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;变量声明方式&quot;&gt;&lt;a href=&quot;#变量声明方式&quot; class=&quot;headerlink&quot; title=&quot;变量声明方式&quot;&gt;&lt;/a&gt;变量声明方式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;变量命名规范&lt;br&gt;所有变量声明是以&lt;strong&gt;描述 - 场景 - 尺寸 - 基线&lt;/strong&gt;从左至右的先后顺 序决定。&lt;br&gt;例如：&lt;br&gt;变量&lt;code&gt;$alert-success-bg&lt;/code&gt;  &lt;em&gt;(框架警示框组件没有大小尺寸)&lt;/em&gt;&lt;br&gt;alert：警示框&lt;br&gt;success：场景为成功时&lt;br&gt;bg：背景色&lt;/p&gt;
&lt;p&gt;再举个栗子，变量：&lt;code&gt;$padding-large-vertical&lt;/code&gt;&lt;br&gt;padding：内边距&lt;br&gt;large：大尺寸&lt;br&gt;vertical：基线(y轴,代表padding-top和padding-bottom)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;结构&quot;&gt;&lt;a href=&quot;#结构&quot; class=&quot;headerlink&quot; title=&quot;结构&quot;&gt;&lt;/a&gt;结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;全局属性：公共属性的变量，用于组件全局属性的变量。&lt;/li&gt;
&lt;li&gt;组件变量块：公共代码块所需要的属性变量，尺寸和场景的变量。&lt;br&gt;以下是我画的结构图：&lt;br&gt;&lt;img src=&quot;http://u-hey.com/wp-content/uploads/2016/08/BSsass-var1.jpg&quot; alt=&quot;sass架构示意图&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://u-hey.com/wp-content/uploads/2016/08/BSsass-var2.jpg&quot; alt=&quot;sass架构示意图&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上包含了_variables全部变量属性，以及结构说明。&lt;br&gt;&lt;em&gt;注：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;鼠标行为：link,hover,active&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;鼠标点击：active&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;鼠标悬停：hover&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;其它：暂不明&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  这一章主要学习_variables.scss。目的是学习优秀框架的变量声明方式及结构。所有变量声明的方式决定整体架构的风格。直接决定了UI组件的编写规划，贯穿整体，非常重要。最先了解变量有助于后面UI组件的研究。&lt;br&gt;
    
    </summary>
    
    
      <category term="sass" scheme="http://yoursite.com/tags/sass/"/>
    
      <category term="bootstrap" scheme="http://yoursite.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>深度了解bootstrap源码之sass篇（一）</title>
    <link href="http://yoursite.com/2016/07/29/%E6%B7%B1%E5%BA%A6%E4%BA%86%E8%A7%A3bootstrap%E6%BA%90%E7%A0%81%E4%B9%8Bsass%E7%AF%87%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2016/07/29/深度了解bootstrap源码之sass篇（一）/</id>
    <published>2016-07-29T12:25:15.000Z</published>
    <updated>2016-07-29T12:26:36.000Z</updated>
    
    <content type="html">&lt;p&gt;框架版本：3.3.5&lt;br&gt;下载项目：Sass&lt;br&gt;路径：assets/stylesheets/bootstrap/&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;h2 id=&quot;sass架构和文件说明&quot;&gt;&lt;a href=&quot;#sass架构和文件说明&quot; class=&quot;headerlink&quot; title=&quot;sass架构和文件说明&quot;&gt;&lt;/a&gt;sass架构和文件说明&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://u-hey.com/wp-content/uploads/2016/07/BSsass.jpg&quot; alt=&quot;sass架构示意图&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;初步了解&quot;&gt;&lt;a href=&quot;#初步了解&quot; class=&quot;headerlink&quot; title=&quot;初步了解&quot;&gt;&lt;/a&gt;初步了解&lt;/h3&gt;&lt;p&gt;架构图解说：mixins文件包里放置已写好的&lt;strong&gt;函数&lt;/strong&gt;、对应各个组件的&lt;strong&gt;样式属性与方法&lt;/strong&gt;、其中包括&lt;strong&gt;兼容处理&lt;/strong&gt;、&lt;strong&gt;浏览器默认样式清除&lt;/strong&gt;，&lt;strong&gt;多端响应处理&lt;/strong&gt;等。&lt;br&gt;bootatrap文件包里除了mixins以外还有各组件，比如按钮、表单、布局、列表等，其中框架的所有变量也在_variable.scss中。&lt;/p&gt;
&lt;p&gt;bs是一个整体，mixins是每个部件所需要的材料，与mixins同级的sass文件则是各个封装完整的实例，可单独使用。&lt;/p&gt;
&lt;h3 id=&quot;文件说明&quot;&gt;&lt;a href=&quot;#文件说明&quot; class=&quot;headerlink&quot; title=&quot;文件说明&quot;&gt;&lt;/a&gt;文件说明&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;文件名.scss&lt;/th&gt;
&lt;th&gt;文件说明(简述)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_alert&lt;/td&gt;
&lt;td&gt;警告框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_badges&lt;/td&gt;
&lt;td&gt;徽章&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_breadcrumb&lt;/td&gt;
&lt;td&gt;面包屑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_btn-group&lt;/td&gt;
&lt;td&gt;按钮组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_buttons&lt;/td&gt;
&lt;td&gt;按钮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_carousel&lt;/td&gt;
&lt;td&gt;轮播&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_close&lt;/td&gt;
&lt;td&gt;关闭按钮图标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_code&lt;/td&gt;
&lt;td&gt;代码块（samp,pre,kbd等）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_Component animations&lt;/td&gt;
&lt;td&gt;fade效果（常见如触发模态框时模态渐入效果）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_dropdowns&lt;/td&gt;
&lt;td&gt;下拉（可与导航、按钮组、列表标签配合使用，还可嵌套使用）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_forms&lt;/td&gt;
&lt;td&gt;表单（集合了单复选、图例、字段级、文本、输入框、标签、选择器等）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_glyphicon&lt;/td&gt;
&lt;td&gt;框架自带字体图标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_gird&lt;/td&gt;
&lt;td&gt;网格（row和container已经它们的自适应处理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_input-group&lt;/td&gt;
&lt;td&gt;输入组（输入框与按钮、插件、图标的搭配）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_Jumbotron&lt;/td&gt;
&lt;td&gt;超大容器（官网首页那个大巨幕就是这货的杰作）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_label&lt;/td&gt;
&lt;td&gt;标签（与forms里的label不同在于，forms的lable侧重于信息选择，没有皮肤和尺寸。而这个侧重于信息传达，分皮肤和尺寸。）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_list-groups&lt;/td&gt;
&lt;td&gt;列表组（常见于面板内的列表信息）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_media&lt;/td&gt;
&lt;td&gt;媒体对象（常见于消息展示，留言评论）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_mixins&lt;/td&gt;
&lt;td&gt;打包mixins文件夹内的所有文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_modals&lt;/td&gt;
&lt;td&gt;模态框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_navbar&lt;/td&gt;
&lt;td&gt;导航条（用于顶部或底部导航）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_navs&lt;/td&gt;
&lt;td&gt;导航组（用于菜单、tab选项卡）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_normalize&lt;/td&gt;
&lt;td&gt;文本标签规范（描述类文本）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_pager&lt;/td&gt;
&lt;td&gt;文本页（描述类文本）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_pagination&lt;/td&gt;
&lt;td&gt;分页&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_panels&lt;/td&gt;
&lt;td&gt;面板与面板组&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_popover&lt;/td&gt;
&lt;td&gt;弹出框&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_print&lt;/td&gt;
&lt;td&gt;打印样式（包含h5样式规范和文档类标签规范）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_progress-bars&lt;/td&gt;
&lt;td&gt;进度条&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_responsive-embed&lt;/td&gt;
&lt;td&gt;嵌入反应（对iframe,vedia,object等类嵌入的样式规范）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_responsive-utilities&lt;/td&gt;
&lt;td&gt;程序类嵌入响应式处理（含尺寸）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_scaffolding&lt;/td&gt;
&lt;td&gt;三方样式冲突处理（含多端处理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_table&lt;/td&gt;
&lt;td&gt;表格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_theme&lt;/td&gt;
&lt;td&gt;各组件的配色（引入了所有变量和打包的mixins）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_thumbnail&lt;/td&gt;
&lt;td&gt;略缩图&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_tooltips&lt;/td&gt;
&lt;td&gt;工具提示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_type&lt;/td&gt;
&lt;td&gt;排版（含各种文本、例如大小号、对齐、略缩语、地址等文本）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_utilities&lt;/td&gt;
&lt;td&gt;内容细节处理（含clearfix、hide/show、pull-left/right等）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_variables&lt;/td&gt;
&lt;td&gt;所有组件变量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_wells&lt;/td&gt;
&lt;td&gt;类似于消息面板（类似但不是情景背景色和警告框）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;mixin下的.scss&lt;/th&gt;
&lt;th&gt;文件说明(简述)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_alert&lt;/td&gt;
&lt;td&gt;警告框的代码块（代码块：通过@mixin 定义的函数。即代表&lt;strong&gt;可重用的代码块&lt;/strong&gt;）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_background-variant&lt;/td&gt;
&lt;td&gt;情景色代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_border-radius&lt;/td&gt;
&lt;td&gt;边的半径代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_buttons&lt;/td&gt;
&lt;td&gt;按钮代码块，含尺寸响应&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_center-block&lt;/td&gt;
&lt;td&gt;定义一个行标签的代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_clearfix&lt;/td&gt;
&lt;td&gt;清除浮动的代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_forms&lt;/td&gt;
&lt;td&gt;表单和表单组的公共代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_gradients&lt;/td&gt;
&lt;td&gt;渐变&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_gird&lt;/td&gt;
&lt;td&gt;布局间距处理的代码块（用于网格布局）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_gird-framework&lt;/td&gt;
&lt;td&gt;生成网格布局&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_hide-text&lt;/td&gt;
&lt;td&gt;文本隐藏（将在bootstrap4中删除）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_image&lt;/td&gt;
&lt;td&gt;图片和其&lt;strong&gt;响应式&lt;/strong&gt;处理（强调一下自适应和响应式不是同一个概念）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_labers&lt;/td&gt;
&lt;td&gt;laber标签用的代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_list-group&lt;/td&gt;
&lt;td&gt;列表组通用代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_nav-divider&lt;/td&gt;
&lt;td&gt;用于下拉和导航列表（水平分割）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_nav-vertical-align&lt;/td&gt;
&lt;td&gt;计算元素垂直居中，用于导航栏&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_opacity&lt;/td&gt;
&lt;td&gt;透明度（含其IE兼容处理）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_pagination&lt;/td&gt;
&lt;td&gt;分页的代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_panels&lt;/td&gt;
&lt;td&gt;面板代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_progress-bar&lt;/td&gt;
&lt;td&gt;进度条代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_reset-filters&lt;/td&gt;
&lt;td&gt;图片透明处理（用于IE兼容的）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_reset-text&lt;/td&gt;
&lt;td&gt;初始化文本类型样式属性的代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_resize&lt;/td&gt;
&lt;td&gt;调整大小（css3属性，元素尺寸调整）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_responsive-visibility&lt;/td&gt;
&lt;td&gt;响应处理（含表格标签的hack）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_size&lt;/td&gt;
&lt;td&gt;定义盒子宽高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_tab-focus&lt;/td&gt;
&lt;td&gt;触发outline的兼容处理。注释上声明是只用于webkit内核的浏览器的兼容处理。具体还用在哪些地方需要再研究。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_table-row&lt;/td&gt;
&lt;td&gt;将table转化为row(网格)，并防止不规范的表格嵌套。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_text-emphasis&lt;/td&gt;
&lt;td&gt;文本强调转换代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_text-overflow&lt;/td&gt;
&lt;td&gt;文本强制一行的代码块&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;_vendor-prefixes&lt;/td&gt;
&lt;td&gt;集合了所有需要写内核兼容的css属性，并生成代码块。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;缺失的说明&quot;&gt;&lt;a href=&quot;#缺失的说明&quot; class=&quot;headerlink&quot; title=&quot;缺失的说明&quot;&gt;&lt;/a&gt;缺失的说明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;bootstrap-compass.scss&lt;/li&gt;
&lt;li&gt;bootstrap-mincer.scss&lt;/li&gt;
&lt;li&gt;bootstrap-sprockets.scss&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;框架版本：3.3.5&lt;br&gt;下载项目：Sass&lt;br&gt;路径：assets/stylesheets/bootstrap/&lt;/p&gt;
    
    </summary>
    
    
      <category term="sass" scheme="http://yoursite.com/tags/sass/"/>
    
      <category term="bootstrap" scheme="http://yoursite.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>关于bootstrap框架里media类的解析</title>
    <link href="http://yoursite.com/2016/07/27/%E5%85%B3%E4%BA%8Ebootstrap%E6%A1%86%E6%9E%B6%E9%87%8Cmedia%E7%B1%BB%E7%9A%84%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2016/07/27/关于bootstrap框架里media类的解析/</id>
    <published>2016-07-27T12:11:34.000Z</published>
    <updated>2016-07-29T12:26:54.000Z</updated>
    
    <content type="html">&lt;p&gt;写这篇文章源于工作项目前端UI要重构，而我选择参考bs框架来促进这个任务。同时，在创建媒体对象UI组件时，我发现bs框架的_media.scss类有几个属性令我不解。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;bs完整的_media.scss类是这样的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.media &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Proper spacing between instances of .media&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  margin-top: 15px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;amp;:first-child &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    margin-top: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  zoom: 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  overflow: hidden;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  width: 10000px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-object &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  display: block;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // Fix collapse in webkit from max-width: 100% and display: table-cell.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;amp;.img-thumbnail &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    max-width: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-right,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media &amp;gt; .pull-right &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  padding-left: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-left,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media &amp;gt; .pull-left &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  padding-right: 10px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-left,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-right,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  display: table-cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  vertical-align: top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-middle &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  vertical-align: middle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-bottom &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  vertical-align: bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Reset margins on headings for tighter default spacing&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-heading &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  margin-top: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  margin-bottom: 5px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Media list variation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Undo default ul/ol styles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.media-list &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  padding-left: 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  list-style: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最先令我疑惑的是&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.media-body &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  width: 10000px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为什么要设置这么大的宽度呢？意义在哪？百度无果，我寻问了前辈豪大(豪情)，得到线索&lt;a href=&quot;http://stackoverflow.com/questions/37178475/why-does-media-body-class-in-bootstrap-have-width-10-000px-and-media-class-have&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;。&lt;br&gt;又挑战我4级未过的英文水平了。。借助有道，我整理了一下提问和回答&lt;/p&gt;
&lt;h3 id=&quot;提问&quot;&gt;&lt;a href=&quot;#提问&quot; class=&quot;headerlink&quot; title=&quot;提问&quot;&gt;&lt;/a&gt;提问&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Why does media-body class in bootstrap have width 10,000px and media class have overflow hidden and zoom 1?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;  翻译：&lt;br&gt;  &lt;strong&gt;在bootstrap框架里为什么&lt;code&gt;media-body&lt;/code&gt;样式含有&lt;code&gt;width:10000px&lt;/code&gt;和&lt;code&gt;media&lt;/code&gt;样式含有&lt;code&gt;overflow:hidden&lt;/code&gt;,&lt;code&gt;zoom:1&lt;/code&gt;？&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have some question regarding the media classes in bootstrap.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Why does .media-body class in bootstrap have width 10,000px? Why did they use display: table-cell not display: block?&lt;/li&gt;
&lt;li&gt;Why is overflow: hidden and zoom: 1used on .media class?&lt;/li&gt;
&lt;li&gt;Why doesn’t the div with .media-body actually take 10,000px width?&lt;/li&gt;
&lt;li&gt;What would happen if overflow: hidden and zoom: 1 are not used in .media class?&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;As for my effort, I removed overflow, zoom and 10,000px width and observed no difference.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译：&lt;br&gt;&lt;strong&gt;我有一些关于bs框架里media类的问题。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1.  为什么.media-body的宽为10000px,为什么是display:tall-cell而不是block?&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2. 为什么.media用了zoom:1和overflow:hideen？&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;3. 为什么实际上div的宽度不是.media-body设置的10000px？&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;4. 如果不设置over-flow:hidden和zoom:1将会发生什么？&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;经过实践后，我删除over-flow:hidden和zoom:1和width:10000px观察到并没有什么改变。&lt;/strong&gt;&lt;br&gt;大致是这个意思QAQ有没有英语好点的指导指导……&lt;/p&gt;
&lt;h3 id=&quot;回答&quot;&gt;&lt;a href=&quot;#回答&quot; class=&quot;headerlink&quot; title=&quot;回答&quot;&gt;&lt;/a&gt;回答&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;I have found some comments in the collection “Responsive Bootstrap”:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Create new block formatting context in modern browsers&lt;/li&gt;
&lt;li&gt;Avoid shrink-wrap behaviour of table-cell&lt;/li&gt;
&lt;li&gt;Override for IE6/7&lt;/li&gt;
&lt;li&gt;Create new block formatting context in IE6/7&lt;br&gt;  Alternatively, use ‘overflow:hidden’ if clipping is OK&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;display: table-cell; /* 1 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;width: 10000px; /* 2 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@include old-ie() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *width: auto; /* 3 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *zoom: 1; /* 4 */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;zoom is a hack for IE6 and IE7. All browsers ignore attributes that begin with an asterisk. Only IE7 and below takes them into account.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译：&lt;br&gt;&lt;strong&gt;我收集到一些关于“bs响应”的回复：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1. &lt;code&gt;display: table-cell;&lt;/code&gt;在新版本浏览器可触发BFC（块级格式化上下文），如果不知道什么是BFC，可以百度或者看我的前一篇文章&lt;a href=&quot;u-hey.github.io/2016/05/12/overflow-hidden&quot;&gt;overflow:hidden&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;2.  &lt;code&gt;width:10000px&lt;/code&gt;能避免设置&lt;code&gt;table-cell&lt;/code&gt;的盒子变型 (因为在IE6/7不支持&lt;code&gt;table-cell&lt;/code&gt;属性，且浏览器对&lt;code&gt;table-cell&lt;/code&gt;属性展现不一)&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;3.  &lt;code&gt;width:auto&lt;/code&gt;在IE6/7中形同于重写/覆盖。（*width是IE8下的hack技术）&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;4.  &lt;code&gt;zoom:1&lt;/code&gt;能在IE6/7中触发BFC&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;使用&lt;code&gt;overflow:hidden&lt;/code&gt;能恰到好处的隐藏溢出样式。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zoom:1&lt;/code&gt; 是IE6/7的hack技巧，所有浏览器都会忽略这个属性除了IE6/7.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;看来为了善用&lt;code&gt;table-cell&lt;/code&gt;，Twitter大牛们又给我上了一课。&lt;br&gt;这里为了求证以上答案的真实性，我去拜访了张鑫旭前辈的博客，了解&lt;a href=&quot;http://www.zhangxinxu.com/wordpress/2010/10/%E6%88%91%E6%89%80%E7%9F%A5%E9%81%93%E7%9A%84%E5%87%A0%E7%A7%8Ddisplaytable-cell%E7%9A%84%E5%BA%94%E7%94%A8/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;table-cell&lt;/a&gt;。&lt;br&gt;在之前，我对table-cell属性仅仅停留在&lt;strong&gt;表单元形式展现&lt;/strong&gt;的印象里，通俗理解，设置&lt;code&gt;display:table-cell&lt;/code&gt;的盒子形式上会变成&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;，所以其子元素都会变成表单元，形同于&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;或&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;。但由于IE6/7的不支持，所以设置其父元素需要配合&lt;code&gt;overflow:hidden&lt;/code&gt;,&lt;code&gt;zoom:1&lt;/code&gt;用于避免盒子塌陷，和触发BFC。而&lt;code&gt;*width:10000px&lt;/code&gt;多余的宽度也恰到好处的被父元素隐藏。&lt;br&gt;所以&lt;code&gt;table-cell&lt;/code&gt;有很高的使用价值，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;大小不固定元素的垂直居中，&lt;em&gt;在对图片垂直居中时，&lt;code&gt;img&lt;/code&gt;标签应被&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;标签包裹。&lt;/em&gt;(父table-cell + 父子vertical-align + 子inline-block)&lt;/li&gt;
&lt;li&gt;两栏自适应布局(兄弟flout + 兄弟table-cell)&lt;/li&gt;
&lt;li&gt;等高布局(父table-row + 子table-cell)&lt;/li&gt;
&lt;li&gt;列表布局(同上 + 子width)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;(父：指父元素，子：指子元素，兄弟：相邻元素)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;超实用有木有，日常写demo都遇的上。&lt;br&gt;系统提示：恭喜玩家uhey技能提升10个点！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;写这篇文章源于工作项目前端UI要重构，而我选择参考bs框架来促进这个任务。同时，在创建媒体对象UI组件时，我发现bs框架的_media.scss类有几个属性令我不解。&lt;br&gt;
    
    </summary>
    
    
      <category term="sass" scheme="http://yoursite.com/tags/sass/"/>
    
      <category term="bootstrap" scheme="http://yoursite.com/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>ife-task002 学习记录</title>
    <link href="http://yoursite.com/2016/05/16/ife-task002-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/05/16/ife-task002-学习记录/</id>
    <published>2016-05-16T08:23:17.000Z</published>
    <updated>2016-05-16T12:33:40.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;了解javascript。&quot;&gt;&lt;a href=&quot;#了解javascript。&quot; class=&quot;headerlink&quot; title=&quot;了解javascript。&quot;&gt;&lt;/a&gt;了解javascript。&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;参考资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/36&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网JavaScript入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网JavaScript教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codecademy.com/tracks/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;期望达成&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;了解JavaScript是什么；如何在HTML页面加载JavaScript代码。搜索一下，为什么我们让你把&lt;code&gt;script&lt;/code&gt;放在&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;前。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h4 id=&quot;javascript数据类型及语言基础&quot;&gt;&lt;a href=&quot;#javascript数据类型及语言基础&quot; class=&quot;headerlink&quot; title=&quot;javascript数据类型及语言基础&quot;&gt;&lt;/a&gt;javascript数据类型及语言基础&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;任务一： 判断数据类型。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;       // 判断arr是否为一个数组，返回一个bool值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		function isArray(arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			//if(arr.constructor === Array) 或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (arr instanceof(Array)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				console.log(&amp;quot;数组&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				console.log(&amp;quot;不是数组&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 判断fn是否为一个函数，返回一个bool值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		function isFunction(fn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (typeof(fn) === &amp;quot;function&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				console.log(&amp;quot;函数&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				console.log(&amp;quot;不是函数&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		isArray([]);//是数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		isFunction(function() &amp;#123;&amp;#125;);//函数&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/jsref/jsre_constructor_array.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考1：http://www.w3school.com.cn/jsref/jsrefconstructor_array.asp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://javascript.ruanyifeng.com/grammar/basic.html#toc9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考2：http://javascript.ruanyifeng.com/grammar/basic.html#toc9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;任务二： 判断数据类型了解值类型和引用类型的区别，了解各种对象的读取、遍历方式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 使用递归来实现一个深度克隆，可以复制一个目标对象，返回一个完整拷贝&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 被复制的对象类型会被限制为数字、字符串、布尔、日期、数组、Object对象。不会包含函数、正则对象等&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function clone(obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (typeof obj == &amp;quot;number&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _number = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&amp;quot;数字&amp;quot; + _number);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else if (typeof obj == &amp;quot;string&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _string = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&amp;quot;字符&amp;quot; + _string);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else if (typeof obj == &amp;quot;boolean&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _boolean = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&amp;quot;布尔值&amp;quot; + _boolean);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else if (obj instanceof Date) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _Date = obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(&amp;quot;日期&amp;quot; + _Date);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else if (obj instanceof(Array)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _A = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var len;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (var i = 0, len = obj.length; i &amp;lt; len; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_A[i] = obj[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(_A[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else if (obj instanceof(Object)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _obj = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (var j in obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			_obj[j] = obj[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		console.log(_obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	clone(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		1: 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		3: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qianduanblog.com/post/js-learning-30-object-clone-copy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考1：http://qianduanblog.com/post/js-learning-30-object-clone-copy.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.lishengcn.cn/archives/136.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考2：http://www.lishengcn.cn/archives/136.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;任务三：学习数组、字符串、数字等相关方法。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 对数组进行去重操作，只考虑数组中元素为数字或字符串，返回一个去重后的数组&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function uniqArray(arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var newArray = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (var i in arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (arr[i] !== &amp;apos;&amp;apos; &amp;amp;&amp;amp; newArray.indexOf(arr[i]) &amp;lt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			newArray.push(arr[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(newArray);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return newArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;uniqArray([1, , 3, 3, 3, 4, 5, 8]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/bb383831.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考：https://msdn.microsoft.com/zh-cn/library/bb383831.aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 实现一个简单的trim函数，用于去除一个字符串，头部和尾部的空白字符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 假定空白字符只有半角空格、Tab&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 练习通过循环，以及字符串的一些基本方法，分别扫描字符串str头部和尾部是否有连续的空白字符，并且删掉他们，最后返回一个完成去除的字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function simpleTrim(str) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var len = str.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var i = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var newStr = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (i; i &amp;lt; len; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (str[i] !== &amp;apos; &amp;apos; &amp;amp;&amp;amp; str[i] !== &amp;apos;\t&amp;apos; &amp;amp;&amp;amp; str[i] !== &amp;apos;&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			newStr.push(str[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	newStr = newStr.join(&amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(newStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;simpleTrim(&amp;quot;	1 			2	 3 8 &amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;语法关键词：==join()==和==split()==&lt;br&gt;搜索关键词：&lt;strong&gt;数组与字符串转化&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 对字符串头尾进行空格字符的去除、包括全角半角空格、Tab等，返回一个字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 尝试使用一行简洁的正则表达式完成该题目&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function trim(str2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return str2.replace(/^\s+|\s+$/g, &amp;apos;&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var str2 = &amp;apos;   hi!  &amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str2 = trim(str2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(str2);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;语法关键词：==string.replace()==&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/system.string.replace(v=vs.110&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考1：https://msdn.microsoft.com/zh-cn/library/system.string.replace(v=vs.110).aspx&lt;/a&gt;.aspx)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考2：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 实现一个遍历数组的方法，针对数组中每一个元素执行fn函数，并将数组索引和元素作为参数传递&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function each(arr, fn) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for (var i in arr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		fn(arr[i], i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 其中fn函数可以接受两个参数：item和index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 使用示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var arr = [&amp;apos;java&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;php&amp;apos;, &amp;apos;html&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function output(item) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;each(arr, output); // java, c, php, html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 使用示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var arr = [&amp;apos;java&amp;apos;, &amp;apos;c&amp;apos;, &amp;apos;php&amp;apos;, &amp;apos;html&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function output2(item, index) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	console.log(index + &amp;apos;: &amp;apos; + item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;each(arr, output2); // 0:java, 1:c, 2:php, 3:html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;语法关键词：==for in==&lt;br&gt;知识点：函数能够作为参数传递&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.lishengcn.cn/archives/136.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考答案：http://www.lishengcn.cn/archives/136.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 获取一个对象里面第一层元素的数量，返回一个整数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function getObjectLength(objNum) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var num = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for(var i in objNum)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if(objNum.hasOwnProperty(i))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			num++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 使用示例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var objNum = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b: 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	d: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c1: 3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		c2: 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;console.log(getObjectLength(objNum)); // 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;语法关键词：==object.hasOwnProperty()==&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;任务四：学习正则表达式。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 判断是否为邮箱地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			function isEmail(emailStr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			var isEmail =/^(\w+\.*\w)+@\w+\.(\w&amp;#123;1,3&amp;#125;)$/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			if(isEmail.test(emailStr))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    			 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    	console.log(&amp;quot;是邮箱&amp;quot;+emailStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    else console.log(&amp;quot;不是邮箱&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 判断是否为手机号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			function isMobilePhone(phone) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    var isPhone = /^(13|15|18)\d&amp;#123;9&amp;#125;$/;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    if(isPhone.test(phone))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    	console.log(&amp;quot;是手机号&amp;quot;+phone);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			    else console.log(&amp;quot;不是手机号&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			isEmail(&amp;quot;uheyhome@163.com&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			isMobilePhone(&amp;quot;18674052544&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000004205425&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;答案参考：https://segmentfault.com/a/1190000004205425&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考1：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://guowenfh.github.io/2015/12/01/Regexp-basis&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;资料参考2：http://guowenfh.github.io/2015/12/01/Regexp-basis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/vs-bug/archive/2010/03/26/1696752.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考资料3：http://www.cnblogs.com/vs-bug/archive/2010/03/26/1696752.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;期望达成：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;掌握JavaScript的各种数据类型概念、判断方法；掌握JavaScript函数、对象的概念；掌握字符串、数字、数组、日期等对象的方法；了解JavaScript的作用域；初步掌握正则表达式的写法；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;DOM&quot;&gt;&lt;a href=&quot;#DOM&quot; class=&quot;headerlink&quot; title=&quot;DOM&quot;&gt;&lt;/a&gt;DOM&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;任务一&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  			// 为element增加一个样式名为newClassName的新样式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function addClass(element, newClassName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//判断是否有这个class，如果否则新增class&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!this.hasClass(element, newClassName)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		element.className += &amp;quot; &amp;quot; + newClassName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 移除element中的样式oldClassName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function removeClass(element, oldClassName) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (this.hasClass(element, oldClassName))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//匹配class前后空格的正则。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var reg = new RegExp(&amp;apos;(\\s|^)&amp;apos; + oldClassName + &amp;apos;(\\s|$)&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		//判断是否有这个class，如果有则用空格替代&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		element.className = element.className.replace(reg, &amp;apos; &amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 判断siblingNode和element是否为同一个父元素下的同一级的元素，返回bool值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function isSiblingNode(element, siblingNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//判断两者的父元素是否全等。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if(element.parentNode === siblingNode.parentNode) return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 语法关键词：hasClsaa();&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 获取element相对于浏览器窗口的位置，返回一个对象&amp;#123;x, y&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function getPosition(element) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var position = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	position.x   = element.getBoundingClientRect().left + document.documentElement.scrollLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	position.y   =element.getBoundingClientRect().top + document.documentElement.scrollTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return position;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  关键词：getBoundingClientRect()&lt;br&gt;  资料参考：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html&lt;/a&gt;&lt;br&gt;资料参考2：&lt;a href=&quot;http://blog.163.com/hongshaoguoguo@126/blog/static/18046981201372885729561/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.163.com/hongshaoguoguo@126/blog/static/18046981201372885729561/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;语法关系表：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;offset*&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;client*&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;scroll*&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;offsetWidth&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;clientWidth&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;scrollWidth&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;offsetHeight&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;clientHeight&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;scrollHeight&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;对象整体的实际宽/高度，包滚动条等边线(border)，会随对象显示大小的变化而改变。即：offsetWidth=clientWidth+scrollbar（滚动条）+border。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;是对象可见的宽度，不包滚动条等边线，会随窗口的显示大小改变。即：width/height+padding，不包括滚动条。&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;对象的实际内容的宽，不包边线宽度，会随对象中内容的多少改变（内容多了可能会改变对象的实际宽度）。即：滚动高宽。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;offsetLeft&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;clientLeft&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;scrollLeft&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;offsetLeft&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;clientTop&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;scrollTop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;获取对象相对于版面或由offsetParent属性指定的父坐标的顶/左部位置（offsetParent：指的是最近的定位祖先元素。如果没有祖先元素是定位的话，会指向body元素。）&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;获取对象的上/左边框的宽度&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;设置或获取对象最顶/左端和对象内容的最顶/左端之间的距离。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;  &lt;em&gt;我看到不少人在这个题上加了：position.x = element.getBoundingClientRect().left + Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);或者position.x = element.getBoundingClientRect().left +  document.body.scrollTop;&lt;/em&gt;&lt;br&gt;    通过实践，实际获取的是元素相对于网页body的高/宽度，把滚动条算在内了。同时，题目是&lt;strong&gt;相对于浏览器窗口的位置&lt;/strong&gt;，所以我觉得不应该加scrollTop/Left。*&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;了解javascript。&quot;&gt;&lt;a href=&quot;#了解javascript。&quot; class=&quot;headerlink&quot; title=&quot;了解javascript。&quot;&gt;&lt;/a&gt;了解javascript。&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;参考资料&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/36&quot;&gt;慕课网JavaScript入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/10&quot;&gt;慕课网JavaScript教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3school.com.cn/js/&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.codecademy.com/tracks/javascript&quot;&gt;Codecademy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;期望达成&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;了解JavaScript是什么；如何在HTML页面加载JavaScript代码。搜索一下，为什么我们让你把&lt;code&gt;script&lt;/code&gt;放在&lt;code&gt;&amp;lt;/body&amp;gt;&lt;/code&gt;前。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="Javascript" scheme="http://yoursite.com/tags/Javascript/"/>
    
      <category term="百度ife" scheme="http://yoursite.com/tags/%E7%99%BE%E5%BA%A6ife/"/>
    
  </entry>
  
  <entry>
    <title>overflow:hidden</title>
    <link href="http://yoursite.com/2016/05/12/overflow-hidden/"/>
    <id>http://yoursite.com/2016/05/12/overflow-hidden/</id>
    <published>2016-05-12T09:26:54.000Z</published>
    <updated>2016-05-12T10:09:11.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;w3c里的overflow-hidden&quot;&gt;&lt;a href=&quot;#w3c里的overflow-hidden&quot; class=&quot;headerlink&quot; title=&quot;w3c里的overflow:hidden&quot;&gt;&lt;/a&gt;w3c里的&lt;code&gt;overflow:hidden&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;  overflow 属性意思是：规定当内容溢出元素框时发生的事情。&lt;br&gt;当它值为hidden时表示内容会被修剪(/打断/隐藏/砍掉)，其余内容是不可见的，且不会显示提供滚动条。&lt;/p&gt;
&lt;h3 id=&quot;overflow-hidden常被这样使用&quot;&gt;&lt;a href=&quot;#overflow-hidden常被这样使用&quot; class=&quot;headerlink&quot; title=&quot;overflow:hidden常被这样使用&quot;&gt;&lt;/a&gt;&lt;code&gt;overflow:hidden&lt;/code&gt;常被这样使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;截断/隐藏盒子包裹的内容。&lt;/li&gt;
&lt;li&gt;闭合浮动。&lt;/li&gt;
&lt;li&gt;触发BFC去清除浮动。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h4 id=&quot;1-关于截断-隐藏盒子包裹的内容：&quot;&gt;&lt;a href=&quot;#1-关于截断-隐藏盒子包裹的内容：&quot; class=&quot;headerlink&quot; title=&quot;1. 关于截断/隐藏盒子包裹的内容：&quot;&gt;&lt;/a&gt;1. 关于截断/隐藏盒子包裹的内容：&lt;/h4&gt;&lt;p&gt;   当盒子被指定大小，则被其包裹的内容超出大小时。超出的部分会被隐藏。&lt;/p&gt;
&lt;h4 id=&quot;2-关于闭合浮动：&quot;&gt;&lt;a href=&quot;#2-关于闭合浮动：&quot; class=&quot;headerlink&quot; title=&quot;2. 关于闭合浮动：&quot;&gt;&lt;/a&gt;2. 关于闭合浮动：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;当子元素为浮动元素，其父的高度会塌陷(如果你没有定义它的高度的话)，所以需要用到&lt;code&gt;overflow:hidden&lt;/code&gt;让爸比将崽崽包裹，如此爸爸就有了崽崽的高度了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;overflow:hidden&lt;/code&gt;的功效和&lt;code&gt;clear:both&lt;/code&gt;类似，都可用于处理浮动元素 ，值得注意的是&lt;code&gt;clear:both&lt;/code&gt;专用于清除其兄弟元素的浮动，而在项目实践中，&lt;code&gt;overflow:hidden&lt;/code&gt;的原理是通过闭合浮动(包裹拥有浮动元素的&lt;strong&gt;子元素&lt;/strong&gt;)而达到清除浮动的效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;3-关于触发BFC：&quot;&gt;&lt;a href=&quot;#3-关于触发BFC：&quot; class=&quot;headerlink&quot; title=&quot;3. 关于触发BFC：&quot;&gt;&lt;/a&gt;3. 关于触发BFC：&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;什么是BFC？（ Box Formatting context ：块级格式化上下文）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Box&lt;/code&gt;&lt;br&gt;CSS 布局的对象和基本单位， 直观点来说，就是一个页面是由很多个 Box 组成的。元素的类型和 display 属性，决定了这个 Box 的类型。 不同类型的 Box， 会参与不同的 Formatting Context（一个决定如何渲染文档的容器），因此Box内的元素会以不同的方式渲染。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Formatting context&lt;/code&gt;&lt;br&gt;W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其&lt;strong&gt;子元素如何对其内容进行定位，以及和其他元素的关系和相互作用&lt;/strong&gt;。所以对于页面构建者来说，理清flow，floats，clear和margins之间的关系，对它们有些深入理解是很重要的事。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其中还有常见的 Formatting context 有 Block fomatting context (简称BFC)和 Inline formatting context (简称IFC)。CSS2.1 中只有 BFC 和 IFC, CSS3 中还增加了 GFC 和 FFC，但这个不是本文要点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BFC的布(te)局(bie)规(zhi)则(chu)：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内部的Box会在垂直方向，一个接一个地放置。&lt;/li&gt;
&lt;li&gt;Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠&lt;/li&gt;
&lt;li&gt;每个元素的margin box的左边， 与包含块border box的左边相接触(对于从左往右的格式化，否则相反)。即使存在浮动也是如此。&lt;/li&gt;
&lt;li&gt;BFC的区域不会与float box重叠。&lt;/li&gt;
&lt;li&gt;BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。&lt;/li&gt;
&lt;li&gt;计算BFC的高度时，浮动元素也参与&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以下元素(满足一个即)可触发BFC：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;float的值是除了”none”的其他值，&lt;/li&gt;
&lt;li&gt;overflow的值是除了”visible”的其他值，&lt;/li&gt;
&lt;li&gt;display的值是&lt;code&gt;table-cell&lt;/code&gt;,&lt;code&gt;table-caption&lt;/code&gt;,&lt;code&gt;inline-block&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;position的值是除了”static”和”relative”的其他值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;由上总结出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当元素与元素之间外边距(margin)发生重叠时；&lt;/li&gt;
&lt;li&gt;当浮动素与兄弟元素重叠时；&lt;/li&gt;
&lt;li&gt;当父元素高度塌陷时；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BFC可以包含浮动元素，并且不会和浮动元素重叠。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;BFC里面的元素的垂直边距不会和BFC的外边距叠加。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;都可以通过overflow:hidden触发BFC**&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4 id=&quot;4-关于BFC的一些误区：&quot;&gt;&lt;a href=&quot;#4-关于BFC的一些误区：&quot; class=&quot;headerlink&quot; title=&quot;4. 关于BFC的一些误区：&quot;&gt;&lt;/a&gt;4. 关于BFC的一些误区：&lt;/h4&gt;&lt;p&gt;有人总结说BFC可以阻止边距叠加，这种说法太绝对了，比如如下：&lt;br&gt;box A&lt;br&gt;box B&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//A、B的边距还是会叠加的，是10px。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div&amp;#123;overflow:hidden;margin:10px;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是如果这样：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;div&amp;#123;float:left:margin:10px;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;div&amp;#123;display:inline-block;margin:10px;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A、B的边距就是20px了，此时就没出现边距叠加。其实这里会叠加的margin是BFC里的子元素的margin和它的叠加（即第一个节点的margin-top和最后一个节点的margin-bottom），不会影响到BFC自身的叠加。这时有人会以为，这里是因为创建了BFC，所以才阻止了边距叠加。其实这时候边距不叠加是它本身没有满足&lt;a href=&quot;http://www.w3.org/TR/CSS2/box.html#collapsing-margins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C中关于边距叠加的条件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;2个元素边距叠加发生的条件是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只有2个元素都是块级内元素才会存在边距叠加。&lt;/li&gt;
&lt;li&gt;没有其他模块，没有间隙，没有padding，没有边框把它们分隔开。&lt;/li&gt;
&lt;li&gt;垂直相邻的边距才会叠加。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;w3c里的overflow-hidden&quot;&gt;&lt;a href=&quot;#w3c里的overflow-hidden&quot; class=&quot;headerlink&quot; title=&quot;w3c里的overflow:hidden&quot;&gt;&lt;/a&gt;w3c里的&lt;code&gt;overflow:hidden&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;  overflow 属性意思是：规定当内容溢出元素框时发生的事情。&lt;br&gt;当它值为hidden时表示内容会被修剪(/打断/隐藏/砍掉)，其余内容是不可见的，且不会显示提供滚动条。&lt;/p&gt;
&lt;h3 id=&quot;overflow-hidden常被这样使用&quot;&gt;&lt;a href=&quot;#overflow-hidden常被这样使用&quot; class=&quot;headerlink&quot; title=&quot;overflow:hidden常被这样使用&quot;&gt;&lt;/a&gt;&lt;code&gt;overflow:hidden&lt;/code&gt;常被这样使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;截断/隐藏盒子包裹的内容。&lt;/li&gt;
&lt;li&gt;闭合浮动。&lt;/li&gt;
&lt;li&gt;触发BFC去清除浮动。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>ife-task001 学习记录</title>
    <link href="http://yoursite.com/2016/04/28/ife-task001-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2016/04/28/ife-task001-学习记录/</id>
    <published>2016-04-28T02:15:18.000Z</published>
    <updated>2016-05-23T07:45:11.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;em&gt;task001的学习主要是为了加深巩固自己在html div+css方面的基础知识，没有跟着所有任务要求走，所以我把ifetask001给出的所有的资料、教程和链接按顺序都刷了一遍，有的刷了多遍。&lt;/em&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhihu.com/question/22689579&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎上的一些Web基本概念介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以用作了解，不一定要记下来，当然记下来的话面试分会upup吧。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/learn/9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;慕课网HTML+CSS基础课程&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;css的冰山一角。这里面有很多细节值得反复咀嚼，最后5节的小技巧很实用，建议多刷两遍。初学的话可以先了解，到后面实践时随着一步步的提升会用到的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://w3school.com.cn/html/index.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school html教程&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;个人认为w3c不需要死记硬背，它更像一本字典，当你在实践的过程中对某个属性不熟悉、或者想要延伸学习时可翻阅。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/HTML/Introduction&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN HTML&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;学习这个的同时应该留意HTML5的一些新标签，这些在实践过程中一定会遇到的，而且学习这个后可以助于你写出规范的html。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Getting_started&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重点在实践，每个章节后面都有一两道考察题，可以学到很多css小窍门，尽量不要看答案。先想再做后看。这个建议分阶段看。有一点css基础概念的一次性全看完也行，但要多刷几遍。再说一遍，重在实践。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://w3school.com.cn/css/index.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school css&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;w3c是一本厚厚的字典。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://w3school.com.cn/html5/index.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里专门讲了html5的一些新特性，边看边刷记得牢。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/html5-diff/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C: HTML5, Differences from HTML4&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;html5和html4的不同之处&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/fengzheng126/archive/2012/05/18/2507632.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;深入了解行高属性&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;看完后关掉，凭记忆码一遍，从最开始每个属性都码一遍对比效果，然后自己想象一个效果再手动码出来，这里建议一个效果多种方式都码出来，这一章刷完后经验翻倍~哈哈&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://w3school.com.cn/css/css_boxmodel.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;模型概述，这里面的资料后面很多资料都有提及，基础中的常识。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/CSS/%E5%BC%80%E5%A7%8B/Boxes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面资料的延伸。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://w3school.com.cn/css/css_positioning.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;w3school&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;关于css定位的详解，说的太官方了看个人喜好吧，像我这种语文不及格的就喜欢干脆码几遍，看不懂也码懂了，定位的知识应用的很广泛，不同的需求会演变出各种定位方式让人觉得“这他妈也可以？”的感觉，刚开始会费解，但码多了也就不是个事了（自豪脸）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://zh.learnlayout.com/no-layout.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习CSS布局&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;布局这词看上去很高大上，实际也很高大上……为什么呢，因为我曾深深的陷入flex无法自拔，有时间写一篇深入flex~ 这个资料只是简单的演示了一遍常用的几个布局，如果你觉得不错，那么真正jj boom的在后面呢。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://teamtreehouse.com/library/css-layout-techniques&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS布局方式&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;英文不好是硬伤，放弃了。摆上来给英文好的童鞋看。QuQ&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.imooc.com/wenda/detail/254035&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;双飞翼布局介绍-始于淘宝UED&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;正在刷，双飞翼这个布局我看的有点匪夷所思的，不知道是不是造诣不够。提示一下，还有一个圣杯布局。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://nec.netease.com/standard/css-sort.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;css规范&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;严格按照这个规范来写会使你的代码看上去非常的绅(hen)士(tai)~&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;task001的题，最后还是跟着粗略做了一遍  &lt;a href=&quot;http://u-hey.com/uhey-study/ife-task-01.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;task001.html&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;task001的学习主要是为了加深巩固自己在html div+css方面的基础知识，没有跟着所有任务要求走，所以我把ifetask001给出的所有的资料、教程和链接按顺序都刷了一遍，有的刷了多遍。&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="百度ife" scheme="http://yoursite.com/tags/%E7%99%BE%E5%BA%A6ife/"/>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>图片预加载读取图片尺寸</title>
    <link href="http://yoursite.com/2016/04/27/%E5%9B%BE%E7%89%87%E9%A2%84%E5%8A%A0%E8%BD%BD%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87%E5%B0%BA%E5%AF%B8/"/>
    <id>http://yoursite.com/2016/04/27/图片预加载读取图片尺寸/</id>
    <published>2016-04-27T08:26:01.000Z</published>
    <updated>2016-07-29T12:26:05.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;什么是图片预加载&quot;&gt;&lt;a href=&quot;#什么是图片预加载&quot; class=&quot;headerlink&quot; title=&quot;什么是图片预加载&quot;&gt;&lt;/a&gt;什么是图片预加载&lt;/h1&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;在播放不同大小尺寸的幻灯片的时候，我们需要及时接收下一张图片的尺寸，这样能够更好的处理实现效果，用户体验也非常不错。这样在图片没有加载完毕就已经获得该图片尺寸的技术称为图片预加载&lt;/p&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;如何判断图片预加载完成&quot;&gt;&lt;a href=&quot;#如何判断图片预加载完成&quot; class=&quot;headerlink&quot; title=&quot;如何判断图片预加载完成&quot;&gt;&lt;/a&gt;如何判断图片预加载完成&lt;/h1&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;可能你已经了解了，在浏览器渲染图片的时候，它获得图片的一片区域的时候，就已经为这张图片预留了一块空白的区域来填充图片，这就是预加载获得图片尺寸最原始的使用方法。但是，在js里面并不能获得这个事件，只有通过图片获得尺寸这一刻来确认图片已经预加载完成。&lt;/p&gt;&lt;br&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;可以这么做，图片的初始尺寸为0，当尺寸不为0的时候，则确认这张图片预加载结束。如：&lt;/p&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var img=new Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img.src=&amp;apos;1.png&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var width=img.width;//=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if(width!=img.width ¦¦ height!=img.height)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(&amp;apos;img预加载完成&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;# 如果图片缓存了&lt;br&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;如果图片缓存了，我们可以更快的从缓存图片中读取图片的尺寸，而不必等待图片的预加载完成。如：&lt;/p&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var img=new Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;img.src=&amp;apos;1.png&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果图片被缓存，则直接返回缓存数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if(img.complete)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(img.width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;br&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;当然，预加载和缓存结合起来的话，必须先判断缓存。&lt;/p&gt;


&lt;h1 id=&quot;完整的预加载读取尺寸函数&quot;&gt;&lt;a href=&quot;#完整的预加载读取尺寸函数&quot; class=&quot;headerlink&quot; title=&quot;完整的预加载读取尺寸函数&quot;&gt;&lt;/a&gt;完整的预加载读取尺寸函数&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/***************************************************************************************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 图片头数据加载就绪获取图片尺寸&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @version	2011.05.27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @author	TangBin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @see		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param	&amp;#123;String&amp;#125;	图片路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param	&amp;#123;Function&amp;#125;	尺寸就绪&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param	&amp;#123;Function&amp;#125;	加载完毕 (可选)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param	&amp;#123;Function&amp;#125;	加载错误 (可选)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yundanran_imageSize(&amp;apos;1.png&amp;apos;, function ()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(&amp;apos;size ready: width=&amp;apos; + this.width + &amp;apos;; height=&amp;apos; + this.height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*******************************************************************************************/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var yundanran_imageSize = (function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var list = [], intervalId = null,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 用来执行队列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tick = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var i = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for (; i &amp;lt; list.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			list[i].end ? list.splice(i--, 1) : list[i]();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		!list.length &amp;amp;&amp;amp; stop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 停止所有定时器队列&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	stop = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		clearInterval(intervalId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		intervalId = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return function (url, ready, load, error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var onready, width, height, newWidth, newHeight,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			img = new Image();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		img.src = url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 如果图片被缓存，则直接返回缓存数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (img.complete) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ready.call(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			load &amp;amp;&amp;amp; load.call(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		width = img.width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		height = img.height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 加载错误后的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		img.onerror = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			error &amp;amp;&amp;amp; error.call(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			onready.end = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			img = img.onload = img.onerror = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 图片尺寸就绪&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		onready = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			newWidth = img.width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			newHeight = img.height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (newWidth !== width ¦¦ newHeight !== height ¦¦&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				// 如果图片已经在其他地方加载可使用面积检测&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				newWidth * newHeight &amp;gt; 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				ready.call(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				onready.end = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		onready();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 完全加载完毕的事件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		img.onload = function () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// onload在定时器时间差范围内可能比onready快&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 这里进行检查并保证onready优先执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			!onready.end &amp;amp;&amp;amp; onready();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			load &amp;amp;&amp;amp; load.call(img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// IE gif动画会循环执行onload，置空onload即可&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			img = img.onload = img.onerror = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 加入队列中定期执行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (!onready.end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			list.push(onready);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 无论何时只允许出现一个定时器，减少浏览器性能损耗&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (intervalId === null) intervalId = setInterval(tick, 40);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p style=&quot;text-indent: 2em;&quot;&gt;这段代码来自前辈的博客。这里借来一用了。&lt;/p&gt;

&lt;h1 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot; class=&quot;headerlink&quot; title=&quot;demo&quot;&gt;&lt;/a&gt;demo&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;实例演示：&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.planeart.cn/demo/imgReady/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.planeart.cn/demo/imgReady/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是图片预加载&quot;&gt;&lt;a href=&quot;#什么是图片预加载&quot; class=&quot;headerlink&quot; title=&quot;什么是图片预加载&quot;&gt;&lt;/a&gt;什么是图片预加载&lt;/h1&gt;&lt;p style=&quot;text-indent: 2em;&quot;&gt;在播放不同大小尺寸的幻灯片的时候，我们需要及时接收下一张图片的尺寸，这样能够更好的处理实现效果，用户体验也非常不错。这样在图片没有加载完毕就已经获得该图片尺寸的技术称为图片预加载&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>使用Ajax(入门)</title>
    <link href="http://yoursite.com/2016/04/27/%E4%BD%BF%E7%94%A8Ajax-%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2016/04/27/使用Ajax-入门/</id>
    <published>2016-04-27T07:23:05.000Z</published>
    <updated>2016-05-13T06:16:09.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;如何使用ajax。&quot;&gt;&lt;a href=&quot;#如何使用ajax。&quot; class=&quot;headerlink&quot; title=&quot;如何使用ajax。&quot;&gt;&lt;/a&gt;如何使用ajax。&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. 创建一个能链接两个异世界的接口&lt;/strong&gt;&lt;br&gt;&lt;code&gt;var xmlhttp;&lt;/code&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;2. 不同世界用不同的接口&lt;/strong&gt;&lt;br&gt; &lt;code&gt;if (str.length==0)
  { 
  document.getElementById(&amp;quot;txtHint&amp;quot;).innerHTML=&amp;quot;&amp;quot;;
  return;
  }
if (window.XMLHttpRequest)
  {// code for IE7+, Firefox, Chrome, Opera, Safari
  xmlhttp=new XMLHttpRequest();
  }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 开启世界交互大门&lt;/strong&gt;&lt;br&gt;&lt;code&gt;xmlhttp.onreadystatechange&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 嘿，对面的，你们那边状态如何？&lt;/strong&gt;&lt;br&gt;&lt;code&gt;xmlhttp.readyState&lt;/code&gt; == 4 （I’M OK COME ON!）&lt;br&gt;&lt;code&gt;xmlhttp.status&lt;/code&gt;  == 200 （I’M OK COME ON!）&lt;/p&gt;
&lt;p&gt;   相关说明：&lt;br&gt;    0: 请求未初始化&lt;br&gt;    1: 服务器连接已建立&lt;br&gt;    2: 请求已接收&lt;br&gt;    3: 请求处理中&lt;br&gt;    4: 请求已完成，且响应已就绪&lt;br&gt;    200: “OK”&lt;br&gt;    404: 未找到页面&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 我要他们那边的%￥……%……东西~ &lt;code&gt;//doing&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 5步骤完毕后发送请求链接&lt;/strong&gt;&lt;br&gt;&lt;code&gt;xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;test1.txt&amp;quot;,true);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;相关说明：&lt;br&gt;&lt;code&gt;open(method,url,async)&lt;/code&gt;&lt;br&gt;规定请求的类型、URL 以及是否异步处理请求。&lt;br&gt;method：请求的类型；GET 或 POST&lt;br&gt;url：文件在服务器上的位置&lt;br&gt;async：true（异步）或 false（同步）&lt;/p&gt;
&lt;p&gt;为防止缓存可变为&lt;br&gt;&lt;code&gt;xmlhttp.open(&amp;quot;GET&amp;quot;,&amp;quot;demo_get.asp?t=&amp;quot; + Math.random(),true);&lt;/code&gt;&lt;br&gt;&lt;code&gt;xmlhttp.send();&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 点击确认~发射！&lt;code&gt;xmlhttp.send();&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相关说明：&lt;br&gt;&lt;code&gt;send(string)&lt;/code&gt;&lt;br&gt;将请求发送到服务器。&lt;br&gt;string：仅用于 POST 请求&lt;/p&gt;
&lt;h4 id=&quot;完整的ajax示例&quot;&gt;&lt;a href=&quot;#完整的ajax示例&quot; class=&quot;headerlink&quot; title=&quot;完整的ajax示例&quot;&gt;&lt;/a&gt;完整的ajax示例&lt;/h4&gt;&lt;p&gt;  &lt;em&gt;//coding以下的部分为请求到数据后的处理 &lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function showText(str)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//创建ajax对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				var xmlHttp = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//判断是否空值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				if(str==&amp;quot;&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					//coding&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					document.getElementById(&amp;quot;ID&amp;quot;).innerHTML=&amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//根据不同的浏览器建立不同的接口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				if(window.XMLHttpRequest)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					//IE7+ firefox,chorme,o,safari,webkit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					xmlHttp = new XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					// IE6-&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					xmlHttp = new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//主人，我准备好了~ 出发吧&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				xmlHttp.onreadystatechange=function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					//芝麻开门&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					if(xmlHttp.readyState==4 &amp;amp;&amp;amp; xmlHttp.status==200)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						//coding&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;						document.getElementById(&amp;quot;ID&amp;quot;).innerHTML = xmlHttp.responseText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//配置异世界链接隧道&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				xmlHttp.open(&amp;quot;GET&amp;quot;,&amp;quot;AjaxText.php?q=&amp;quot;+str,true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				//关闭通道&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				xmlHttp.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当页面有多个ajax请求时：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var xmlhttp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function loadXMLDoc(url, cfunc) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (window.XMLHttpRequest) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// code for IE7+, Firefox, Chrome, Opera, Safari&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		xmlhttp = new XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// code for IE6, IE5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		xmlhttp = new ActiveXObject(&amp;quot;Microsoft.XMLHTTP&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		xmlhttp.onreadystatechange = cfunc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		xmlhttp.open(&amp;quot;GET&amp;quot;, url, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		xmlhttp.send();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function showText(str) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	loadXMLDoc(&amp;quot;AjaxText.php?q=&amp;quot; + str, function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if (xmlhttp.readyState == 4 &amp;amp;&amp;amp; xmlhttp.status == 200) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			//coding&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			document.getElementById(&amp;quot;result&amp;quot;).innerHTML = xmlHttp.responseText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;如何使用ajax。&quot;&gt;&lt;a href=&quot;#如何使用ajax。&quot; class=&quot;headerlink&quot; title=&quot;如何使用ajax。&quot;&gt;&lt;/a&gt;如何使用ajax。&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. 创建一个能链接两个异世界的接口&lt;/strong&gt;&lt;br&gt;&lt;code&gt;var xmlhttp;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ajax" scheme="http://yoursite.com/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>简单说说代码加载顺序</title>
    <link href="http://yoursite.com/2016/02/14/%E7%AE%80%E5%8D%95%E8%AF%B4%E8%AF%B4%E4%BB%A3%E7%A0%81%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/"/>
    <id>http://yoursite.com/2016/02/14/简单说说代码加载顺序/</id>
    <published>2016-02-14T05:21:17.000Z</published>
    <updated>2016-06-23T06:38:35.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;function-与window-onload-a与window-onload-a&quot;&gt;&lt;a href=&quot;#function-与window-onload-a与window-onload-a&quot; class=&quot;headerlink&quot; title=&quot;$(function)与window.onload=a与window.onload=a()&quot;&gt;&lt;/a&gt;$(function)与window.onload=a与window.onload=a()&lt;/h1&gt;&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;今天被问到这样一段代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;window.onload = function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function loa() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行结果是【1，2，3】&lt;/p&gt;
&lt;h3 id=&quot;为啥？！&quot;&gt;&lt;a href=&quot;#为啥？！&quot; class=&quot;headerlink&quot; title=&quot;为啥？！&quot;&gt;&lt;/a&gt;为啥？！&lt;/h3&gt;&lt;p&gt;  经过百度(是的，连google都用不着)搜得一些信息，在jq里&lt;code&gt;$(function(){})&lt;/code&gt; 和&lt;code&gt;$(document).ready(function(){})&lt;/code&gt;两个方法的效果是一样的，都是在&lt;strong&gt;dom文档树加载完之后执行一个函数&lt;/strong&gt;（注意，这里面的文档树加载完不代表全部文件加载完）。&lt;br&gt;而&lt;code&gt;window.onload&lt;/code&gt;是在&lt;strong&gt;dom文档树加载完和所有文件加载完之后执行一个函数&lt;/strong&gt;。也就是说&lt;code&gt;(document).ready&lt;/code&gt;要比&lt;code&gt;window.onload&lt;/code&gt;先执行。&lt;/p&gt;
&lt;p&gt;ok，i try try：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;window.onload = function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(&amp;apos;onload&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.ready(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(&amp;apos;ready&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;果然先弹出【ready】,后弹出【onload】。&lt;/p&gt;
&lt;p&gt;在Jquery里面&lt;code&gt;$(document).ready&lt;/code&gt;函数的内部是这样实现的：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;document.ready = function(callback) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	///兼容FF,Google&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (document.addEventListener) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		document.addEventListener(&amp;apos;DOMContentLoaded&amp;apos;, function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			document.removeEventListener(&amp;apos;DOMContentLoaded&amp;apos;, arguments.callee, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			callback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;, false)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//兼容IE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	else if (document.attachEvent) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		document.attachEvent(&amp;apos;onreadytstatechange&amp;apos;, function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if (document.readyState == &amp;quot;complete&amp;quot;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				document.detachEvent(&amp;quot;onreadystatechange&amp;quot;, arguments.callee);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				callback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else if (document.lastChild == document.body) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		callback();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;了解了ready和onload的区别，所以能得到断定的是先2在1之后。&lt;br&gt;由于代码执行顺序从上往下，首先执行的onload为head内的，即为2，再次执行也就是body里的onload，即为1.故此执行结果为1，2，3。&lt;/p&gt;
&lt;p&gt;根据我混迹多年的码农第六感，我又将head内的js部分放入body之后。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;window.onload = function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function loa() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	alert(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;由于此时顺序的改变，得到的结果竟然是1，2。哼，哀家就知道有诈！&lt;/p&gt;
&lt;p&gt;前面讲到onload和ready的区别后，1，2可以理解，为啥3又不显示了？&lt;/p&gt;
&lt;p&gt;后来发现，原来在执行2时,onload此时已经被赋予属性&lt;code&gt;function(){ alert(2);}&lt;/code&gt;了，所以在时，虽然系统没有报错，但此时body内的onload已经不是初始的onload。&lt;br&gt;以为这样就完了么，太简单，我又把js放到头部，现在改变了一点情况：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; alert(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;window.onload = loa;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function loa() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; alert(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个的输出结果仍然是1， 3&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; alert(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;window.onload = loa();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function loa() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; alert(3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个的输出结果却是【3，1】&lt;/p&gt;
&lt;p&gt;真是“惊喜”啊，码农的世界尊的好丰富啊~ 一个()改变世界有木有。&lt;/p&gt;
&lt;p&gt;咱们来略较真的探讨下&lt;code&gt;window.onload = a ;&lt;/code&gt; 与&lt;code&gt;window.onload = a() ;&lt;/code&gt;的区别，前者页面加载完毕后立刻执行方法a，后者是调用方法a的执行结果赋值给onload属性，window是全局对象，onload是其属性，意思是&lt;strong&gt;事件会在页面或图像加载完成后立即发生&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我暂时没有想到一个更好♂的比喻，尽量解释清楚：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前者： 当页面(包括文件)加载完毕后执行方法function a();此时onload的类型为function(函数)。&lt;/li&gt;
&lt;li&gt;后者： 调用执行function a()方法的返回值赋给window.onload。此时onload已经被鬼上身(赋值)了，鬼就是为function a()执行的结果。当function a()执行的结果没有返回值，则onload类型为object(对象)。总之，它不是之前那个单纯的看不见摸不着的意识流了！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里我建议结合我以上的说法console试试，学渣友情提醒，来跟我一起左手右手一个慢动作，一定要亲自试试不然会忘记的忘了几次的我决定今天好好写一篇记录，巩固巩固。&lt;/p&gt;
&lt;p&gt;了解了以上区别，这样&lt;code&gt;window.onload = a&lt;/code&gt;我们已经很好理解了。&lt;br&gt;而&lt;code&gt;window.onload = a() ;&lt;/code&gt; 之前说到“此时onload已经被鬼上身(赋值)了，那么onload便不在是当初的onload”。它被赋予了新的意义，那么原来的它(onload:事件会在页面或图像加载完成后立即发生)便不复存在。所以，可以这么理解，原本的onload没有被执行，onload被赋予了新的意义。既然没有被执行，那么它不需要等待页面加载完毕，二手页面加载到它这的时候就执行因此，输出的结果为3，1。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;function-与window-onload-a与window-onload-a&quot;&gt;&lt;a href=&quot;#function-与window-onload-a与window-onload-a&quot; class=&quot;headerlink&quot; title=&quot;$(function)与window.onload=a与window.onload=a()&quot;&gt;&lt;/a&gt;$(function)与window.onload=a与window.onload=a()&lt;/h1&gt;&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
</feed>
